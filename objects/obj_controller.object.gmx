<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation code
enum limb {head,torso,leftFoot,leftArm,rightFoot,rightArm,headwear,lefthand,righthand,weapon,none};

enum towards {left,right,down,up,downleft,downright,upleft,upright,leftdown,leftup,rightdown,rightup};

enum avatar { trump, hillary, obama, agent, pence, biden, michelle, bill, melania, wolf, christie, carson, sanders, cruz };

randomize();

global.loaded = false;

global.player = -1;
global.instances = 1;

xh[0,0] = false; // xhair
xh[0,1] = x; //x
xh[0,2] = y; //y
xh[0,3] = spr_xhair2_bigger;

xh[1,0] = false; //attachment
xh[1,1] = x; //
xh[1,2] = y; //
xh[1,3] = spr_laserdot; //

xh[2,0] = false;
xh[2,1] = x;
xh[2,2] = y;
xh[2,3] = s_cursor;

//application_surface_draw_enable(false); 

//init_shaders();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End step
if (instance_exists(obj_gun))
{
    var xhairDir = point_direction(obj_gun.gunCenterx, obj_gun.gunCentery, mouse_x, mouse_y);
    var xhairDis = point_distance(obj_gun.gunCenterx,  obj_gun.gunCentery, mouse_x, mouse_y);
    if (xhairDis &lt; 100)
    {
        xh[0,1] = obj_gun.gunCenterx + lengthdir_x(100, xhairDir);
        xh[0,2] = obj_gun.gunCentery + lengthdir_y(100, xhairDir);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin Step

if (instance_exists(obj_gun))
{
    window_set_cursor(cr_none);
    xh[0,1] = mouse_x;
    xh[0,2] = mouse_y
    xh[0,0] = true;
    xh[2,0] = false;
}
else
{
    xh[0,0] = false;
    xh[2,1] = mouse_x;
    xh[2,2] = mouse_y
    xh[2,0] = true;
}

if (instance_exists(obj_attachment))
{
    xh[1,0] = true;
    xh[1,1] = obj_attachment.x;
    xh[1,2] = obj_attachment.y
}
else
{
    xh[1,0] = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step code

//movement for player
if (instance_exists(global.player)) &amp;&amp; (global.loaded)
{
    if (global.player.hp &gt; 0)
    {
        if (global.player.clickX != -5000)
        {
            global.player.hspeed = global.player.charSpeed * (keyboard_check(ord('D')) - keyboard_check(ord('A')));
            global.player.vspeed = global.player.charSpeed * (keyboard_check(ord('S')) - keyboard_check(ord('W')));
        }
        if (keyboard_check(vk_add)) global.player.charSpeed++;
        if (keyboard_check(vk_subtract)) global.player.charSpeed--;
        if (keyboard_check(vk_right)) view_angle += 2;
        if (keyboard_check(vk_left)) view_angle -= 2;
        if (keyboard_check(vk_down)) view_angle= 0;
        if (keyboard_check(vk_up)) view_angle = 180;
        view_angle = fixDir(view_angle);
        if (global.player.charSpeed &lt; 2) global.player.charSpeed = 2;
        if (global.player.charSpeed &gt; 8) global.player.charSpeed = 8;
        //x = global.player.x;
        //y = global.player.y;
    }
}
else
{
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean on room end
global.loaded = false;
if (instance_exists(obj_attachment)) with (obj_attachment) instance_destroy();
if (instance_exists(obj_gun)) with (obj_gun) instance_destroy();
if (instance_exists(obj_cheeseburger)) with (obj_cheeseburger) instance_destroy();
if (instance_exists(obj_charhead)) with (obj_charhead) instance_destroy();
if (instance_exists(obj_char)) with (obj_char) instance_destroy();
if (instance_exists(controlBlood)) with (controlBlood) instance_destroy();
if (instance_exists(controlDebris)) with (controlDebris) instance_destroy();
if (instance_exists(obj_fullscreen)) with (obj_fullscreen) instance_destroy();
if (instance_exists(obj_controllerRoom)) with (obj_controllerRoom) instance_destroy();
if (instance_exists(global.player))
{
    with (global.player)
    {
    instance_destroy();
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room start

blood = instance_create(x,y,controlBlood);

debris = instance_create(x,y,controlDebris);

global.player = instance_create(x,y,obj_char);
with (global.player)
{
    gun = instance_create(x,y,obj_gun);
    gun.limbDepth = -20;
    gun.parent = global.player;
}
global.loaded = true;

//instance_create(800,y,obj_char);

//application_surface_enable(false);
//view_hport[0] = 768;
//view_wport[0] = 1024;
//view_wview[0] = 1024;
//view_hview[0] = 768;

//instance_create(0,0,obj_controllerRoom);
instance_create(0,0,obj_fullscreen);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

draw_set_alpha(0.7);
draw_set_color(c_white);

if (instance_exists(global.player))
{
draw_healthbar(view_xview[0]+10,view_yview[0]+10,view_xview[0]+70,view_yview[0]+20,(global.player.hp/global.player.maxhp)*100,c_black,c_dkgray,c_orange,0,true,true);
}
if (xh[1,0])
{
    draw_set_alpha(0.2);
    draw_set_color(c_green);
    draw_circle(xh[1,1],xh[1,2],20,false);
    draw_set_color(c_red);
    draw_circle(xh[1,1],xh[1,2],3,false);
}

if (xh[0,0]) 
{
draw_sprite_ext(xh[0,3],0,xh[0,1],xh[0,2],1,1,0,c_white,1);
}
if (xh[2,0]) 
{
draw_sprite_ext(xh[2,3],0,xh[2,1],xh[2,2],1,1,0,c_white,1);
}
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
