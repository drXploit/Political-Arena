<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_handgun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
global.instances++;

if (instance_exists(global.player)) facing = global.player.facing;
else                                facing = towards.right;

limbType = limb.weapon;

numTrail = 8;
indexTrail = 0;

var t = 0;
repeat(numTrail)
{
    var xy = 0;
    repeat (7)
    {
        trail[t,xy] = 0;
        xy++;
    }
    t++;
}

gunCenterx = 0;
gunCentery = 0;

gunXOffset = 0;
gunYOffset = (-sprite_get_height(spr_trumpsuit)/2)+15;

muzzleFlash[0] = false; //draw
muzzleFlash[1] = s_muzzle_flashes; //spr
muzzleFlash[2] = irandom(27);   //index


gunDis = 0;
gunDir = 0;

gunBarrelx=0;
gunBarrely=0;
gunBarrelx2=0;
gunBarrely2=0;
gunBarrelx3=0;
gunBarrely3=0;

barrelDis = 0;
barrelDir = 0;

////////////////////////////////////
image_speed = 0;
image_index = 0;

canFire = true;

parent = -1;
limbDepth = -20;
depth = -20;


// Particle system
part_casing_sys = part_system_create();

// Particle
part_system_depth(part_casing_sys,(y+100)*-2);

part_casing = part_type_create();
part_type_sprite(part_casing, spr_handgun_casing, 0,  0, true);
part_type_size(part_casing, 1.0, 1.0, 0, 0);
part_type_alpha2(part_casing, 1, 0);
part_type_speed(part_casing, 2, 2.5, 0, 0);
part_type_orientation(part_casing, 0, 359, 5, 0, true);
part_type_direction(part_casing, 270, 359, 0, 0);
part_type_gravity(part_casing, 0.25, 270);
part_type_life(part_casing, room_speed/3, room_speed);

// Particle emitter
part_casing_emit = part_emitter_create(part_casing_sys);

attachment = instance_create(x,y,obj_attachment);

////
cX = 0;//attachment.x;
cY = 0;//attachment.y;
rad = 15;
damage = 60;

rate = room_speed/15;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy
global.instances--;
if (instance_exists(attachment)) with (attachment) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarm for shooting speed

canFire = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Begin Step
if (parent.hp &lt;= 0) instance_destroy();

depth = limbDepth - parent.y;

gunCenterx = parent.x + gunXOffset;
gunCentery = parent.y + gunYOffset;

x = gunCenterx+lengthdir_x(30,image_angle);
y = gunCentery+lengthdir_y(30,image_angle);

gunDis = point_distance(gunCenterx, gunCentery, mouse_x, mouse_y);
gunDir = point_direction(gunCenterx, gunCentery, mouse_x, mouse_y);

barrelDis = point_distance(gunBarrelx2,gunBarrely2,mouse_x,mouse_y);
barrelDir = point_direction(gunBarrelx2,gunBarrely2,mouse_x,mouse_y);

if (gunDis&gt;110) image_angle = barrelDir;
else image_angle = gunDir;

var t=0;
repeat(numTrail)
{
    var dr=point_direction(trail[t,0],trail[t,1],trail[t,2],trail[t,3]);
    var ds=point_distance(trail[t,0],trail[t,1],trail[t,2],trail[t,3]);
    trail[t,0] = trail[t,0] + lengthdir_x(ds/2,dr);
    trail[t,1] = trail[t,1] + lengthdir_y(ds/2,dr);
    if (trail[t,5] &gt; 0) trail[t,5]-= 0.05;
    t++;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Begin Step
if (parent.hp &lt;= 0) instance_destroy();

/*
depth = limbDepth - parent.y;

gunCenterx = parent.x;
gunCentery = parent.y + (-sprite_get_height(spr_trumpsuit)/2)+15;

//gunCentery = parent.y+(-((sprite_get_yoffset(parent.body[TORSO,SPRITE])*0.70)+20));


x = gunCenterx+lengthdir_x(30,image_angle);
y = gunCentery+lengthdir_y(30,image_angle);

gunDis = point_distance(gunCenterx, gunCentery, mouse_x, mouse_y);
gunDir = point_direction(gunCenterx, gunCentery, mouse_x, mouse_y);

barrelDis = point_distance(gunBarrelx2,gunBarrely2,mouse_x,mouse_y);
barrelDir = point_direction(gunBarrelx2,gunBarrely2,mouse_x,mouse_y);

if (gunDis&gt;110) image_angle = barrelDir;
else image_angle = gunDir;
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step
if (!instance_exists(global.player)) {
    with (attachment) instance_destroy();
    instance_destroy();
}
if (parent.hp &lt;= 0) instance_destroy();

var tempFacing = facing;

if (mouse_x &lt; gunCenterx) 
{                                                       //left
    if (image_yscale&gt;0) image_yscale *= -1;
    facing = towards.left;
    gunBarrelx=x + lengthdir_x(43, image_angle-11.8);
    gunBarrely=y + lengthdir_y(43, image_angle-11.8);
    gunBarrelx2=x + lengthdir_x(43, image_angle);
    gunBarrely2=y + lengthdir_y(43, image_angle);
    gunBarrelx3=x + lengthdir_x(33, image_angle-15.3);
    gunBarrely3=y + lengthdir_y(33, image_angle-15.3);

}
else {                                                  // right
    if (image_yscale&lt;0) image_yscale *= -1;
    facing = towards.right;
    gunBarrelx=x + lengthdir_x(43, 11.8+image_angle);
    gunBarrely=y + lengthdir_y(43, 11.8+image_angle);
    gunBarrelx2=x + lengthdir_x(43, image_angle);
    gunBarrely2=y + lengthdir_y(43, image_angle);
    gunBarrelx3=x + lengthdir_x(33, 15.3+image_angle);
    gunBarrely3=y + lengthdir_y(33, 15.3+image_angle);

}

//direction = image_angle;

if (facing != tempFacing) {
        if (facing==towards.right)&amp;&amp;(parent.body[HEAD,XSCALE]&lt;0)     parent.body[HEAD,XSCALE] *= -1;
        else if (facing==towards.left)&amp;&amp;(parent.body[HEAD,XSCALE]&gt;0) parent.body[HEAD,XSCALE] *= -1;

        if (facing == towards.right) {
            parent.body[LEFTARM,DEPTH] = depth+1;
            parent.body[RIGHTARM,DEPTH] = depth+2;
        }
        else if (facing == towards.left) {
            parent.body[LEFTARM,DEPTH] = depth+2;
            parent.body[RIGHTARM,DEPTH] = depth+1;
        }
}

// arms
var armDis = point_distance(x, y, parent.x+parent.body[LEFTARM,XOFFSET], parent.y+parent.body[LEFTARM,YOFFSET]); 
if      (armDis &lt;= 10) parent.body[LEFTARM,XSCALE] = 0.01;
else if (armDis &lt;= 20) &amp;&amp; (armDis &gt; 10) parent.body[LEFTARM,XSCALE] = 0.25;
else if (armDis &lt;= 30) &amp;&amp; (armDis &gt; 20) parent.body[LEFTARM,XSCALE] = 0.50;
else if (armDis &lt;= 40) &amp;&amp; (armDis &gt; 30) parent.body[LEFTARM,XSCALE] = 0.75;
else if (armDis &lt;= 50) &amp;&amp; (armDis &gt; 40) parent.body[LEFTARM,XSCALE] = 1.0;
else if (armDis &lt;= 60) &amp;&amp; (armDis &gt; 50) parent.body[LEFTARM,XSCALE] = 1.25;
else parent.body[LEFTARM,XSCALE] = 1.50;

armDis = point_distance(x, y, parent.x+parent.body[RIGHTARM,XOFFSET], parent.y+parent.body[RIGHTARM,YOFFSET]); 
if      (armDis &lt;= 10) parent.body[RIGHTARM,XSCALE] = 0.01;
else if (armDis &lt;= 20) &amp;&amp; (armDis &gt; 10) parent.body[RIGHTARM,XSCALE] = 0.25;
else if (armDis &lt;= 30) &amp;&amp; (armDis &gt; 20) parent.body[RIGHTARM,XSCALE] = 0.50;
else if (armDis &lt;= 40) &amp;&amp; (armDis &gt; 30) parent.body[RIGHTARM,XSCALE] = 0.75;
else if (armDis &lt;= 50) &amp;&amp; (armDis &gt; 40) parent.body[RIGHTARM,XSCALE] = 1.0;
else if (armDis &lt;= 60) &amp;&amp; (armDis &gt; 50) parent.body[RIGHTARM,XSCALE] = 1.25;
else parent.body[RIGHTARM,XSCALE] = 1.50;



depth = limbDepth - parent.y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse wheel down
view_hview[0] -= 20;
view_wview[0] -= 20;

if (view_hview[0] &lt; (view_hport / 2)) view_hview[0] = view_hport[0] / 2;
if (view_wview[0] &lt; (view_wport / 2)) view_wview[0] = view_wport[0] / 2;


/*
image_xscale -= 0.1;
if (image_xscale &lt; 0.5) image_xscale = 0.5;

if (facing==towards.right) image_yscale -= 0.1;
else if (facing==towards.left)  image_yscale += 0.1;
if (image_yscale &gt; 0) &amp;&amp; (image_yscale &lt;= 0.5) image_yscale = 0.5;
else if (image_yscale &lt; 0) &amp;&amp; (image_yscale &gt;= -0.5) image_yscale = -0.5;
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse wheel up

view_hview[0] += 20;
view_wview[0] += 20;

if (view_hview[0] &gt; (view_hport * 2)) view_hview[0] = view_hport[0] * 2;
if (view_wview[0] &gt; (view_wport * 2)) view_wview[0] = view_wport[0] * 2;


/*
if (image_xscale &lt;= 3) {
    image_xscale += 0.1;
    if (image_xscale &gt; 3) image_xscale = 3;
}
if (image_yscale &lt;= 3) &amp;&amp; (image_yscale &gt;= -3) 
{

    if      (facing==towards.right) image_yscale += 0.1;
    else if (facing==towards.left)  image_yscale -= 0.1;

    if      (image_yscale &gt;  3) image_yscale = 3;
    else if (image_yscale &lt; -3) image_yscale = -3;
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="58">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Testing

with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeHillary(body);
    which = avatar.hillary;
}

with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeAgent(body);
    which = avatar.agent;
}

with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeBill(body);
    which = avatar.bill;
}


with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeObama(body);
    which = avatar.obama;
}


with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeSanders(body);
    which = avatar.sanders;
}


with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeBiden(body);
    which = avatar.biden;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Off
muzzleFlash[0] = false;
muzzleFlash[2] = irandom(26);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="55">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Testing

//with (instance_create(mouse_x,mouse_y,obj_char))
//{
//    which = avatar.trump;
//}


with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeChristie(body);
    which = avatar.christie;
}

with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makePence(body);
    which = avatar.pence;
}

with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeCruz(body);
    which = avatar.cruz;
}

with (instance_create(mouse_x,mouse_y,obj_char))
{
    body = makeCarson(body);
    which = avatar.carson;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explosion
instance_create(gunBarrelx,gunBarrely,obj_missile);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Testage

if (collision_point(mouse_x,mouse_y,obj_char,false,true)) || (collision_point(mouse_x,mouse_y,obj_charhead,false,true)) || (collision_point(mouse_x,mouse_y,obj_wall,false,true))
{

    if (canFire) 
    {   
    gunHandgun();
    }

}

else
{
    muzzleFlash[0] = false;
    with (global.player)
    {
        motion_set(point_direction(x,y,mouse_x,mouse_y),charSpeed);
        speed = charSpeed;
//        move_towards_point(mouse_x,mouse_y,charSpeed);
   //     clickX = mouse_x;
   //     clickY = mouse_y;
    }
}
parent.image_speed = 0.16;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room End

if (part_system_exists(part_casing_sys)) 
{
    part_type_destroy(part_casing);
    part_emitter_destroy(part_casing_sys,part_casing_emit);
    part_system_destroy(part_casing_sys);
}

instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean

if (part_system_exists(part_casing_sys)) 
{
    part_type_destroy(part_casing);
    part_emitter_destroy(part_casing_sys,part_casing_emit);
    part_system_destroy(part_casing_sys);
}

instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

var t=0;

//shader_set(shader_grayscale);

repeat(numTrail)
{
    draw_set_alpha(trail[t,5]);
    draw_set_colour(trail[t,4]);
    draw_line_width(trail[t,0],trail[t,1],trail[t,2],trail[t,3],trail[t,6]);
    t++;
}
draw_set_blend_mode( bm_add );

if (muzzleFlash[0]) 
    draw_sprite_ext(muzzleFlash[1],muzzleFlash[2],gunBarrelx,gunBarrely,1,1,image_angle,image_blend,image_alpha);

draw_set_blend_mode( bm_normal ); 

//shader_reset();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>22,20</point>
    <point>40,40</point>
  </PhysicsShapePoints>
</object>
