<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_trumpsuit</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation code
global.instances++;
originstance = id;

which = avatar.trump;

maxhp = 2000;
hp = maxhp;
xpvalue = 30;
xp = 0;
maxxp = 300;

showHealth = false;

mouseHover = false

/////////text
var m=0;
var n=0;
maxText = 7;
textItems = 7;
repeat(maxText+1) {
    repeat(textItems+1) {
        text[m,n] = 0;
        n++;
    }
    m++;
}
m = 0;
repeat(maxText+1)
{
    text[m,0] = "It's gonna be huge."; //text
    text[m,1] = 0;                  //x
    text[m,2] = 0;                  //y
    text[m,3] = 1;                  //textFade = 1;
    text[m,4] = font_vinegar_10;    //font
    text[m,5] = c_white;            //c_color
    text[m,6] = false;              //on
    m++
}
//////////////////////////////

first = true;
firstSpeed = 0;
firstDir = 0;
firstTendancy = -360;

showMaga = true;

facing = towards.right;

stepState = stepStateAlive;

canFire = true;
charSpeed = 5;

clickX = -5000;
clickY = 5000;

var i,j;
i=0;
j=0;

bodyParts = 9;
bodyTags = 13;
repeat(bodyParts+1)
{
    repeat(bodyTags+1)
    {
        body[i,j] = 0;
        j++;
    }
    i++;
}

body[LEFTARM,HP] = -1;               //hp?
body[LEFTARM,FACING] = towards.right;     //facing
body[LEFTARM,LIMB] = limb.leftArm;      //limbType
body[LEFTARM,SPEED] = 3;
body[LEFTARM,DEPTH] = -6;                //depth
body[LEFTARM,XOFFSET] = -30;               //xOffset
body[LEFTARM,YOFFSET] = -sprite_get_height(spr_trumpsuit)/2+25;
body[LEFTARM,SPRITE] = spr_arm;             //sprite_index
body[LEFTARM,IMAGE_BLEND] = c_white;        //image_blend
body[LEFTARM,XSCALE] = 1;                   //image_xscale
body[LEFTARM,YSCALE] = 1;                   //image_yscale
body[LEFTARM,ANGLE] = 0;                    //image_angle
body[LEFTARM,DIRECTION] = 0;                //detached direction
body[LEFTARM,SPINSPEED] = 4;

body[RIGHTARM,HP] = -1;                        //hp?
body[RIGHTARM,FACING] = towards.right;          //facing
body[RIGHTARM,LIMB] = limb.rightArm;            //limbType
body[RIGHTARM,SPEED] = 3;
body[RIGHTARM,DEPTH] = -5;                      //depth
body[RIGHTARM,XOFFSET] = 30;                    //xOffset
body[RIGHTARM,YOFFSET] = -sprite_get_height(spr_trumpsuit)/2+25;
body[RIGHTARM,SPRITE] = spr_arm;                //sprite_index
body[RIGHTARM,IMAGE_BLEND] = c_white;           //image_blend
body[RIGHTARM,XSCALE] = 1;                      //image_xscale
body[RIGHTARM,YSCALE] = 1;                      //image_yscale
body[RIGHTARM,ANGLE] = 0;                       //image_angle
body[RIGHTARM,DIRECTION] = 0;                   //detached direction
body[RIGHTARM,SPINSPEED] = 4;

body[TORSO,HP] = -1;                           //hp?
body[TORSO,FACING] = towards.right;             //facing
body[TORSO,LIMB] = limb.torso;                  //limbType
body[TORSO,SPEED] = 1;                          //rad
body[TORSO,DEPTH] = -2;                         //depth
body[TORSO,XOFFSET] = 0;                        //xOffset
body[TORSO,YOFFSET] = 0;                        //yOffset
body[TORSO,SPRITE] = spr_trumpsuit;             //sprite_index
body[TORSO,IMAGE_BLEND] = c_white;              //image_blend
body[TORSO,XSCALE] = 1;                         //image_xscale
body[TORSO,YSCALE] = 1;                         //image_yscale
body[TORSO,ANGLE] = 0;                          //image_angle
body[TORSO,DIRECTION] = 0;                      //detached direction
body[TORSO,SPINSPEED] = choose(2,-2);;

body[HEAD,HP] = -1;                            //hp?
body[HEAD,FACING] = towards.right;              //facing
body[HEAD,LIMB] = limb.head;                    //limbType
body[HEAD,SPEED] = 3;                           //rad
body[HEAD,DEPTH] = -3;                          //depth
body[HEAD,XOFFSET] = 0;                         //xOffset
body[HEAD,YOFFSET] = -sprite_get_yoffset(body[TORSO,SPRITE]);
body[HEAD,SPRITE] = spr_trump_blink;            //sprite_index
body[HEAD,IMAGE_BLEND] = c_white;               //image_blend
body[HEAD,XSCALE] = 1;                          //image_xscale
body[HEAD,YSCALE] = 1;                          //image_yscale
body[HEAD,ANGLE] = 0;                           //image_angle
body[HEAD,DIRECTION] = 0;                       //detached direction
body[HEAD,SPINSPEED] = 4;

body[LEFTFOOT,HP] = -1;                        //hp?
body[LEFTFOOT,FACING] = towards.right;          //facing
body[LEFTFOOT,LIMB] = limb.leftFoot;            //limbType
body[LEFTFOOT,SPEED] = 0;
body[LEFTFOOT,DEPTH] = -3;                      //depth
body[LEFTFOOT,XOFFSET] = -13;                   //xOffset
body[LEFTFOOT,YOFFSET] = sprite_get_height(spr_trumpsuit)/2;                  //yOffset
body[LEFTFOOT,SPRITE] = spr_leftfoot;           //sprite_index
body[LEFTFOOT,IMAGE_BLEND] = c_white;           //image_blend
body[LEFTFOOT,XSCALE] = 1;                      //image_xscale
body[LEFTFOOT,YSCALE] = 1;                      //image_yscale
body[LEFTFOOT,ANGLE] = 0;                       //image_angle
body[LEFTFOOT,DIRECTION] = 0;                   //detached direction
body[LEFTFOOT,SPINSPEED] = 4;

body[RIGHTFOOT,HP] = -1;                       //hp?
body[RIGHTFOOT,FACING] = towards.right;         //facing
body[RIGHTFOOT,LIMB] = limb.rightFoot;          //limbType
body[RIGHTFOOT,SPEED] = 0;
body[RIGHTFOOT,DEPTH] = -3;                     //depth
body[RIGHTFOOT,XOFFSET] = 13;                   //xOffset
body[RIGHTFOOT,YOFFSET] = sprite_get_height(spr_trumpsuit)/2;
body[RIGHTFOOT,SPRITE] = spr_leftfoot;          //sprite_index
body[RIGHTFOOT,IMAGE_BLEND] = c_white;          //image_blend
body[RIGHTFOOT,XSCALE] = 1;                     //image_xscale
body[RIGHTFOOT,YSCALE] = 1;                     //image_yscale
body[RIGHTFOOT,ANGLE] = 0;                      //image_angle
body[RIGHTFOOT,DIRECTION] = 0;                  //detached direction
body[RIGHTFOOT,SPINSPEED] = 4;

body[HEADWEAR,HP] =  -1;                       //hp?
body[HEADWEAR,FACING] =  towards.right;         //facing
body[HEADWEAR,LIMB] =  limb.headwear;           //limbType
body[HEADWEAR,SPEED] =  5;
body[HEADWEAR,DEPTH] =  -4;                     //depth
body[HEADWEAR,XOFFSET] =  0;                    //xOffset
body[HEADWEAR,YOFFSET] =  -sprite_get_yoffset(spr_trumpsuit)-53;
body[HEADWEAR,SPRITE] =  spr_maga;              //sprite_index
body[HEADWEAR,IMAGE_BLEND] = c_white;           //image_blend
body[HEADWEAR,XSCALE] =  1;                     //image_xscale
body[HEADWEAR,YSCALE] = 1;                      //image_yscale
body[HEADWEAR,ANGLE] = 0;                       //image_angle
body[HEADWEAR,DIRECTION] = 0;                   //detached direction
body[HEADWEAR,SPINSPEED] = 4;

body[LEFTHAND,HP] =  -1;                       //hp?
body[LEFTHAND,FACING] =  towards.right;         //facing
body[LEFTHAND,LIMB] =  limb.lefthand;           //limbType
body[LEFTHAND,SPEED] =  3;                      //rad
body[LEFTHAND,DEPTH] =  -4;                     //depth
body[LEFTHAND,XOFFSET] =  0;                    //xOffset
body[LEFTHAND,YOFFSET] =  0;                    //yOffset
body[LEFTHAND,SPRITE] =  spr_righthand;         //sprite_index
body[LEFTHAND,IMAGE_BLEND] = c_white;           //image_blend
body[LEFTHAND,XSCALE] =  1;                     //image_xscale
body[LEFTHAND,YSCALE] = 1;                      //image_yscale
body[LEFTHAND,ANGLE] = 0;                       //image_angle
body[LEFTHAND,DIRECTION] = 0;                   //detached direction
body[LEFTHAND,SPINSPEED] = 4;

body[RIGHTHAND,HP] =  -1;                      //hp?
body[RIGHTHAND,FACING] =  towards.right;        //facing
body[RIGHTHAND,LIMB] =  limb.righthand;         //limbType
body[RIGHTHAND,SPEED] =  3;                     //rad
body[RIGHTHAND,DEPTH] =  -4;                    //depth
body[RIGHTHAND,XOFFSET] =  0;                   //xOffset
body[RIGHTHAND,YOFFSET] =  0;                   //yOffset
body[RIGHTHAND,SPRITE] =  spr_lefthand;         //sprite_index
body[RIGHTHAND,IMAGE_BLEND] = c_white;          //image_blend
body[RIGHTHAND,XSCALE] =  1;                    //image_xscale
body[RIGHTHAND,YSCALE] = 1;                     //image_yscale
body[RIGHTHAND,ANGLE] = 0;                      //image_angle
body[RIGHTHAND,DIRECTION] = 0;                  //detached direction
body[RIGHTHAND,SPINSPEED] = 4;

footMoving = 0;                                 // 0 = left, 1 = right
leftFootMax = 20;                               // decremental! then [divide by two]
rightFootMax = 20;
leftFootPosition = 0;
rightFootPosition = 0;

nowMoving = false;

alarm[0] = 10;

alarm[1] = irandom(room_speed);

charhead = instance_create(x,y,obj_charhead);
with (charhead)
    parent = other.id;

sprite_index = spr_trump_blink;
mask_index = spr_trumpsuit;

gun = -1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy
if (instance_exists(global.player))
{
    if (id != global.player)
    {
        with (global.player) {
            xp += other.xpvalue
            text = floatText(text,"+" + string(other.xpvalue) + "XP!" ,x,y,font_vinegar_18,c_white);
        }
    }
}
global.instances--;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink
if (sprite_index == body[HEAD,SPRITE]) image_speed = 0.16;

alarm[1] = room_speed*random_range(2,4); //blink

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 'ai'

if (id != global.player) &amp;&amp; (hp &gt; 0) motion_set(random(359), charSpeed/2);

// motion_set(choose (0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225, 240, 255, 270, 315), charSpeed/2);

alarm[0] = room_speed*random_range(2,4); // ai

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Begin step

if (mask_index != spr_trumpsuit) mask_index = spr_trumpsuit;

if (id != global.player) 
{
    if (stepState == stepStateAlive) 
    {
        if        (direction&gt;=90) &amp;&amp; (direction&lt;270)   &amp;&amp; (body[HEAD,XSCALE]&gt;0) body[HEAD,XSCALE] *= -1;
        else if  ((direction&lt;90)  || (direction&gt;=270)) &amp;&amp; (body[HEAD,XSCALE]&lt;0) body[HEAD,XSCALE] *= -1;

        body[LEFTARM,ANGLE]     = direction;
        body[LEFTHAND,ANGLE]    = direction;

        body[RIGHTARM,ANGLE]    = direction;
        body[RIGHTHAND,ANGLE]   = direction;

        body[LEFTHAND,XOFFSET]  = body[LEFTARM,XOFFSET] +lengthdir_x(sprite_get_width(body[LEFTARM, SPRITE]),body[LEFTARM,ANGLE]);
        body[LEFTHAND,YOFFSET]  = body[LEFTARM,YOFFSET] +lengthdir_y(sprite_get_width(body[LEFTARM, SPRITE]),body[LEFTARM,ANGLE]);

        body[RIGHTHAND,XOFFSET] = body[RIGHTARM,XOFFSET]+lengthdir_x(sprite_get_width(body[RIGHTARM,SPRITE]),body[RIGHTARM,ANGLE]);
        body[RIGHTHAND,YOFFSET] = body[RIGHTARM,YOFFSET]+lengthdir_y(sprite_get_width(body[RIGHTARM,SPRITE]),body[RIGHTARM,ANGLE]);
    }
}
else 
{
    if (body[HEAD,HP] == -1)
    {
        image_index = spr_trump_blink;
        mask_index = spr_trumpsuit;
        which = avatar.trump;
        body[HEAD,HP] = -2;
    }   
    if (gun != -1)
    {
        if (instance_exists(obj_gun)){
            body[LEFTARM,ANGLE]   = point_direction(x+body[LEFTARM,XOFFSET] ,y+body[LEFTARM,YOFFSET],obj_gun.x,obj_gun.y);
            body[RIGHTARM,ANGLE]  = point_direction(x+body[RIGHTARM,XOFFSET],y+body[RIGHTARM,YOFFSET],obj_gun.x,obj_gun.y);
        }
    }
}

depth = -y;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step code

if (hp &gt; 0)       {stepState = stepStateAlive;}
else              {stepState = stepStateDead;}

script_execute(stepState);

text = floatTextStep(text);

//if (distance_to_point(clickX,clickY) &lt; 30)
//{
//    speed = 0;
//    clickX = -5000;
//    clickY = 5000;
//}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with bullet

//addDamageFromInstance(id,other);
/*

if (hp &gt; 0)
{
    if (sprite_index != spr_trump_hurt)
    {
            sprite_index = spr_trump_hurt;
            mask_index = spr_trumpsuit;
    }
    if (id != global.player) 
    {
        if (other.whoHit != id)
        {
            var flipDir = other.direction + 180;
            var flipDirMin = flipDir - 10;
            var flipDirMax = flipDir + 10;

            flipDir = fixDir(flipDir);
            flipDirMin = fixDir(flipDirMin);
            flipDirMax = fixDir(flipDirMax);

            bloodSpray(other.x,other.y,flipDirMin,flipDirMax,5,8);
            other.whoHit = id;
            hp -= other.damage;
            if (hp &lt; 0) hp = 0;

            if (other.critDamage &gt; 0)
                text = floatText(text,string(other.damage),x,y+body[HEAD,YOFFSET]-25,font_vinegar_12,c_yellow);
            else
                text = floatText(text,string(other.damage),x,y+body[HEAD,YOFFSET]-25,font_vinegar_12,c_white);

            firstTendancy = other.direction;
            with (other) direction += irandom_range(-10,10);
        }
}

    //}
    image_speed = 0.16;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation end = stop animating

image_speed = 0;
if (sprite_index != body[HEAD,SPRITE])
{
    sprite_index = body[HEAD,SPRITE];
    mask_index = spr_trumpsuit;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stepState = scr_none;
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean

instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw character

//shader_set(PassThroughShader);
draw_set_alpha(image_alpha);


//torso
draw_sprite_ext(body[TORSO,SPRITE],     0,          x+body[TORSO,XOFFSET],      y+body[TORSO,YOFFSET],                          body[TORSO,XSCALE],     body[TORSO,YSCALE],     body[TORSO,ANGLE],      body[TORSO,IMAGE_BLEND],    image_alpha);

if (facing == towards.left)
{
draw_sprite_ext(body[LEFTFOOT,SPRITE],  0,          x+body[LEFTFOOT,XOFFSET],   (y+body[LEFTFOOT,YOFFSET])-leftFootPosition,    body[LEFTFOOT,XSCALE],  body[LEFTFOOT,YSCALE],  body[LEFTFOOT,ANGLE],   body[LEFTFOOT,IMAGE_BLEND], image_alpha);
draw_sprite_ext(body[RIGHTFOOT,SPRITE], 0,          x+body[RIGHTFOOT,XOFFSET],  (y+body[RIGHTFOOT,YOFFSET])-rightFootPosition,  body[RIGHTFOOT,XSCALE], body[RIGHTFOOT,YSCALE], body[RIGHTFOOT,ANGLE],  body[RIGHTFOOT,IMAGE_BLEND],image_alpha);
}
else
{
draw_sprite_ext(body[RIGHTFOOT,SPRITE], 0,          x+body[RIGHTFOOT,XOFFSET],  (y+body[RIGHTFOOT,YOFFSET])-rightFootPosition,  body[RIGHTFOOT,XSCALE], body[RIGHTFOOT,YSCALE], body[RIGHTFOOT,ANGLE],  body[RIGHTFOOT,IMAGE_BLEND],image_alpha);
draw_sprite_ext(body[LEFTFOOT,SPRITE],  0,          x+body[LEFTFOOT,XOFFSET],   (y+body[LEFTFOOT,YOFFSET])-leftFootPosition,    body[LEFTFOOT,XSCALE],  body[LEFTFOOT,YSCALE],  body[LEFTFOOT,ANGLE],   body[LEFTFOOT,IMAGE_BLEND], image_alpha);
}
//head
draw_sprite_ext(sprite_index,           image_index,x+body[HEAD,XOFFSET],       y+body[HEAD,YOFFSET],                           body[HEAD,XSCALE],      body[HEAD,YSCALE],      body[HEAD,ANGLE],       body[HEAD,IMAGE_BLEND],     image_alpha);
if (which == avatar.trump)
  draw_sprite_ext(body[HEADWEAR,SPRITE],0,         x+body[HEADWEAR,XOFFSET],   y+body[HEADWEAR,YOFFSET],                       body[HEADWEAR,XSCALE],  body[HEADWEAR,YSCALE],  body[HEADWEAR,ANGLE],   body[HEADWEAR,IMAGE_BLEND], image_alpha);
//arms
draw_sprite_ext(body[LEFTARM,SPRITE],    0,         x+body[LEFTARM,XOFFSET],    y+body[LEFTARM,YOFFSET],                        body[LEFTARM,XSCALE],   body[LEFTARM,YSCALE],   body[LEFTARM,ANGLE],    body[LEFTARM,IMAGE_BLEND],  image_alpha);
draw_sprite_ext(body[RIGHTARM,SPRITE],   0,         x+body[RIGHTARM,XOFFSET],   y+body[RIGHTARM,YOFFSET],                       body[RIGHTARM,XSCALE],  body[RIGHTARM,YSCALE],  body[RIGHTARM,ANGLE],   body[RIGHTARM,IMAGE_BLEND], image_alpha);

if (gun == -1)
{
    draw_sprite_ext(body[LEFTHAND,SPRITE],0,        x+body[LEFTHAND,XOFFSET],   y+body[LEFTHAND,YOFFSET],                       body[LEFTHAND,XSCALE],  body[LEFTHAND,YSCALE],  body[LEFTHAND,ANGLE],   body[LEFTHAND,IMAGE_BLEND], image_alpha);
    draw_sprite_ext(body[RIGHTHAND,SPRITE],0,       x+body[RIGHTHAND,XOFFSET],  y+body[RIGHTHAND,YOFFSET],                      body[RIGHTHAND,XSCALE], body[RIGHTHAND,YSCALE], body[RIGHTHAND,ANGLE],  body[RIGHTHAND,IMAGE_BLEND],image_alpha);
    if (showHealth &amp;&amp; (hp &gt; 0)) || ((hp &gt; 0) &amp;&amp; (hp &lt; maxhp))
    {
      draw_set_alpha(0.7);
      draw_healthbar(x-30,y-140,x+30,y-150,(hp/maxhp)*100,c_black,c_red,c_orange,0,true,false);
    }
}
else
{
   if (hp &gt; 0)
   draw_sprite_ext(obj_gun.sprite_index,obj_gun.image_index,obj_gun.x,obj_gun.y,obj_gun.image_xscale,obj_gun.image_yscale,obj_gun.image_angle,obj_gun.image_blend,obj_gun.image_alpha);
}

floatTextDraw(text);

//if (id == global.player)
//{
//    textScreen(200,50,string(speed),fa_center);
//    textScreen(200,75,string(hp),fa_center);
//    textScreen(200,100,string(hp),fa_center);

//}

//shader_reset();

/*
if (debug_mode){
    draw_set_color(c_blue);
    draw_set_font(font_vinegar_12);
    draw_set_halign(fa_center);
    draw_set_swf_aa_level( 2 );
    draw_text(x,y+80,"[x:" + string(x) + "] [y:" + string(y) + "]");
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
